// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

::uniffi::setup_scaffolding!("testrust");

/// Export info about the UDL while used to create us
/// See `uniffi_bindgen::macro_metadata` for how this is used.

// ditto for info about the UDL which spawned us.

const UNIFFI_META_CONST_UDL_TESTRUST: ::uniffi::MetadataBuffer =
    ::uniffi::MetadataBuffer::from_code(::uniffi::metadata::codes::UDL_FILE)
        .concat_str("testrust")
        .concat_str("testrust")
        .concat_str("testrust");

#[doc(hidden)]
#[no_mangle]
pub static UNIFFI_META_UDL_TESTRUST: [u8; UNIFFI_META_CONST_UDL_TESTRUST.size] =
    UNIFFI_META_CONST_UDL_TESTRUST.into_array();

// Record definitions, implemented as method-less structs, corresponding to `dictionary` objects.

// Top level functions, corresponding to UDL `namespace` functions.

#[::uniffi::export_for_udl]
pub fn r#add(r#a: u32, r#b: u32) -> u32 {
    unreachable!()
}
// Object definitions, corresponding to UDL `interface` definitions.

// Callback Interface definitions, corresponding to UDL `callback interface` definitions.

// External and Wrapped types
// Support for external types.

// Types with an external `FfiConverter`...

// We generate support for each Custom Type and the builtin type it uses.

// Export scaffolding checksums for UDL items

#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_testrust_checksum_func_add() -> u16 {
    40038
}
